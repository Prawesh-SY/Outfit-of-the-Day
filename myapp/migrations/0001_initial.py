# Generated by Django 5.2.3 on 2025-06-19 05:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import myapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OutfitImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=myapp.models.OutfitImage.image_upload_path)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('style', models.CharField(choices=[('casual', 'Casual'), ('formal', 'Formal'), ('ethnic', 'Ethnic'), ('party', 'Party'), ('sporty', 'Sporty')], max_length=20)),
                ('color', models.CharField(choices=[('black', 'Black'), ('white', 'White'), ('red', 'Red'), ('any', 'Any')], max_length=20)),
                ('occasions', models.CharField(help_text='Comma-separated occasions from: work, wedding, date, vacation, daily', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', myapp.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BodyMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bust', models.FloatField(help_text='Measurement in inches', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)])),
                ('waist', models.FloatField(help_text='Measurement in inches', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)])),
                ('hips', models.FloatField(help_text='Measurement in inches', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)])),
                ('body_type', models.CharField(blank=True, choices=[('hourglass', 'Hourglass'), ('pear', 'Pear'), ('apple', 'Apple'), ('rectangle', 'Rectangle'), ('inverted', 'Inverted Triangle')], editable=False, max_length=20)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bodymeasurement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Body Measurement',
                'verbose_name_plural': 'Body Measurements',
            },
        ),
        migrations.CreateModel(
            name='BraSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('underbust', models.FloatField(help_text='Measurement in inches', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(60)])),
                ('overbust', models.FloatField(help_text='Measurement in inches', validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(80)])),
                ('band_size', models.PositiveSmallIntegerField(editable=False, null=True)),
                ('cup_size', models.CharField(choices=[('AA', 'AA'), ('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('DD', 'DD'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J')], editable=False, max_length=2, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bra_size', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bra Size',
                'verbose_name_plural': 'Bra Sizes',
            },
        ),
        migrations.CreateModel(
            name='ClothingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('top', 'Top'), ('bottom', 'Bottom'), ('dress', 'Dress'), ('outerwear', 'Outerwear'), ('accessory', 'Accessory')], max_length=20)),
                ('style', models.CharField(choices=[('casual', 'Casual'), ('formal', 'Formal'), ('ethnic', 'Ethnic'), ('party', 'Party'), ('sporty', 'Sporty')], max_length=20)),
                ('color', models.CharField(choices=[('black', 'Black'), ('white', 'White'), ('red', 'Red'), ('any', 'Any')], max_length=20)),
                ('image', models.ImageField(upload_to='closet/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Outfit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('occasion', models.CharField(choices=[('work', 'Work'), ('wedding', 'Wedding'), ('date', 'Date'), ('vacation', 'Vacation'), ('daily', 'Daily Wear')], max_length=20)),
                ('style', models.CharField(choices=[('casual', 'Casual'), ('formal', 'Formal'), ('ethnic', 'Ethnic'), ('party', 'Party'), ('sporty', 'Sporty')], max_length=20)),
                ('color', models.CharField(choices=[('black', 'Black'), ('white', 'White'), ('red', 'Red'), ('any', 'Any')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('items', models.ManyToManyField(to='myapp.clothingitem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inspiration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.outfitimage')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteOutfit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('outfit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.outfitimage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='clothingitem',
            index=models.Index(fields=['style'], name='myapp_cloth_style_9fe019_idx'),
        ),
        migrations.AddIndex(
            model_name='clothingitem',
            index=models.Index(fields=['color'], name='myapp_cloth_color_56a8ba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favoriteoutfit',
            unique_together={('user', 'outfit')},
        ),
    ]
